<script type="text/x-handlebars" data-template-name='application'>
  {{ partial 'navigation' }}
  <div class="container">
    {{outlet}}
    <hr>
    {{ partial 'footer' }}
  </div>
</script>

<script type="text/x-handlebars" data-template-name="index">
  <!-- Main jumbotron for a primary marketing message or call to action -->
  <div class="jumbotron">
    <h1>A Wonderously Diverse Framework Ecosystem</h1>
    <p></p>
    <p><a class="btn btn-primary btn-large">View all {{productsCount}} products &raquo;</a></p>
  </div>

  <div class="body-content">
    <div class="row">
      {{#each product in onSale }}
        {{product-detail product=product classNames="col-md-4"}}
      {{/each}}
    </div>
  </div>
</script>

<script type="text/x-handlebars" data-template-name='products/sale'>
<h2>On Sale Items</h2>
<ol class="breadcrumb">
  <li>{{#link-to 'products' }}Store{{/link-to}}</li>
  <li class="active">On Sale</li>
</ol>
<ul class='list-unstyled'>
  {{#each}}
    {{product-detail product=this tagName='li' classNames='row'}}
  {{/each}}
</ul>
</script>

<%= render partial: 'templates/navigation2' %>
<%= render partial: 'templates/footer' %>
<%= render partial: 'templates/about' %>

<script type="text/x-handlebars" data-template-name='products'>
<h1>Products</h1>
<ul>
{{#each}}
  <li>
    <p>{{#link-to 'product' this classNames='btn btn-default'}}{{title}}{{/link-to}}</p>
  </li>
{{/each}}
</ul>

<h3>Filter</h3>
<div class="list-group">
  {{#link-to 'products.sale' classNames="list-group-item"}}
    On Sale
  {{/link-to}}
</div>

{{outlet}}
</script>

<script type="text/x-handlebars" data-template-name='products/index'>
<p>Choose from our {{model}} products!</p>
</script>


<script type="text/x-handlebars" data-template-name='product'>
<h1>{{title}}</h1>

<p>{{description}}</p>
<p>Buy for ${{price}}</p>

<ul>
{{#each reviews}}
  <li>{{text}}</li>
{{/each}}
  {{#if review}}
    <li class='unpublished'>{{review}}</li>
  {{/if}}
</ul>


{{textarea valueBinding='controller.review'}}
<button {{action 'createReview'}}>Review</button>
</script>

<script type="text/x-handlebars" data-template-name='components/product-detail'>
<img {{bind-attr src='product.image'}} class='img-thumbnail col-md-5'/>
<div class='col-md-7'>
  <h2>{{product.title}}</h2>

  {{#if product.isOnSale }}<span class="label label-success">{{#link-to 'products.sale'}}On Sale{{/link-to}}</span>{{/if}}

  <p>{{product.description}}</p>
  <p>{{#link-to 'product' product classNames='btn btn-primary'}}Buy for ${{product.price}}{{/link-to}}</p>
</div>
</script>

<script type='text/javascript'>
  var App = Ember.Application.create();
  App.Router.map(function() {
    this.route('about');
    this.resource('products', function() {
      this.resource('product', { path: '/:product_id'});
      this.route('sale');
    });
  });

  App.ProductsRoute = Ember.Route.extend({
    model: function() {
      return this.store.find('product');
    }
  });
  App.ProductsSaleRoute = Ember.Route.extend({
    model: function () {
      //return this.store.find('product').filterProperty('isOnSale', true);
      return this.modelFor('products').filterBy('isOnSale');
    }
  });

  App.ProductsController = Ember.ArrayController.extend({
    sortProperties: ['title'],
    sortAscending: true
  });


  App.ProductController = Ember.ObjectController.extend({
    review: null,
    actions: {
      createReview: function() {
        var reviewText = this.get('review'),
            product = this.get('model'),
            review = this.store.createRecord('review', {review: reviewText});
        debugger
        product.get('reviews').addObject(review);
        this.set('review', null);
      }
    }
  })
  App.ProductView = Ember.View.extend({
    createReview: function() {
      debugger;
    }
  });



  App.IndexRoute = Ember.Route.extend({
    model: function() {
      return this.store.find('product');
    }
  });
  App.IndexController = Ember.ArrayController.extend({
    productCount: Ember.computed.alias('length'),
    onSale: function() {
      return this.filterBy('isOnSale').slice(0,3);
    }.property('@each.isOnSale')
  });

  App.ApplicationAdapter = DS.FixtureAdapter.extend();
  var attr = DS.attr;
  App.Product = DS.Model.extend({
    title: DS.attr('string'),
    price: DS.attr('number'),
    description: DS.attr('string'),
    isOnSale: DS.attr('boolean'),
    isSeasonal: DS.attr('boolean'),
    reviews: DS.hasMany('review', {async: true}),
  });

  App.Review = DS.Model.extend({
    text: DS.attr('string'),
    reviewedAt: DS.attr('date'),
    product: DS.belongsTo('product')
  });

  App.Product.FIXTURES = [
    {
      id: 1,
      title: 'Acorn',
      price: '0.99',
      description: 'These fell right out of the tree -- or were left unguarded.',
      isOnSale: true,
      isSeasonal: true,
      reviews: [100,101]
    },
    {
      id: 2,
      title: 'Pinecone',
      price: '2.49',
      description: 'A seasonal treat fresh from the pines.',
      isOnSale: false,
      isSeasonal: true,
      reviews: [102,103]
    },
    {
      id: 3,
      title: 'Blackberries',
      price: '4.99',
      description: 'Got a sweet tooth? They might be hard to get to, but worth the trouble!',
      isOnSale: true,
      isSeasonal: true,
      reviews: [104]
    },
    {
      id: 4,
      title: 'Peanuts',
      price: '1.99',
      description: 'Worth digging for, or ripped from a squirrels nest.',
      isOnSale: false,
      isSeasonal: false,
      reviews: []
    },
    {
      id: 5,
      title: 'Mushrooms',
      price: '9.99',
      description: 'Freshly grown due to recent rain!',
      isOnSale: true,
      isSeasonal: false,
      reviews: []
    },
    {
      id: 6,
      title: 'Eggs',
      price: '19.99',
      description: 'A rare and dangerous treat to come across.',
      isOnSale: true,
      isSeasonal: false,
      reviews: []
    }
  ]

App.Review.FIXTURES = [
  { id: 100, product: 1, text: "Very good!" },
  { id: 101, product: 1, text: "Amazing!" },
  { id: 102, product: 2, text: "Also Amazing!" },
  { id: 103, product: 2, text: "Worth checking out." },
  { id: 104, product: 3, text: "Not worth it." },
]
</script>